spring:
  application:
    name: order-service
  config:
    import: optional:configserver:http://configserver:8888

eureka:
  client:
    service-url:
      defaultZone: http://eurekaserver:8761/eureka
    register-with-eureka: true
    fetch-registry: true
  instance:
    prefer-ip-address: true
    lease-renewal-interval-in-seconds: 10
    lease-expiration-duration-in-seconds: 30

server:
  port: 8082




#  data:
#    mongodb:
#      uri: mongodb://mongodb:27017/orderDb
#
#  cloud:
#    config:
#      enabled: true
#
#  kafka:
#    bootstrap-servers: kafka:9092
#    consumer:
#      group-id: order-group
#      auto-offset-reset: earliest
#      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#    producer:
#      key-serializer: org.apache.kafka.common.serialization.StringSerializer
#      value-serializer: org.apache.kafka.common.serialization.StringSerializer
#
#  main:
#    allow-bean-definition-overriding: true

#eureka:
#  client:
#    service-url:
#      defaultZone: http://eurekaserver:8761/eureka
#  instance:
#    prefer-ip-address: true
#    lease-renewal-interval-in-seconds: 10
#    lease-expiration-duration-in-seconds: 30