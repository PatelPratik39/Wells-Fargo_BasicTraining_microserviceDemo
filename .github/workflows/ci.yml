#name: CI/CD Hello World
#
#on:
#  push:
#    branches: ['pratik-branch']
#
#jobs:
#  build:
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v4
#
#      - name: Set up Java
#        uses: actions/setup-java@v4
#        with:
#          distribution: temurin
#          java-version: '21'
#
#      - name: Run Maven tests
#        run: mvn test
#
#      - name: Build package (skip tests)
#        run: mvn package -DskipTests

name: CI/CD Hello World

on:
  push:
    branches: ['pratik-branch']

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'

      - name: Run Maven tests
        working-directory: ./productService
        run: mvn test

      - name: Build package (skip tests)
        working-directory: ./productService
        run: mvn package -DskipTests


#name: CI/CD Hello World
#
#on:
#  push:
#    branches: ['pratik-branch']
#
#jobs:
#  build-and-run:
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v4
#
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v2
#
#      - name: Install Docker Compose
#        run: |
#          sudo apt-get update
#          sudo apt-get install -y docker-compose
#
#      - name: List repo files (debugging)
#        run: ls -la
#
#      - name: Stop running containers
#        run: docker-compose down -v || true
#
#      - name: Build and start all services
#        run: docker-compose up --build -d
#
#      - name: Show running containers
#        run: docker ps