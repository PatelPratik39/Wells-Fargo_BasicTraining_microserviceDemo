version: "3.8"

services:

  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27017:27017"
    networks:
      - microservice-network

  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_DB: productDb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - microservice-network

  configserver:
    build:
      context: ./configserver
    container_name: configserver
    ports:
      - "8888:8888"
    depends_on:
      - mongodb
    environment:
      - SPRING_PROFILES_ACTIVE=default
      - GIT_SSL_NO_VERIFY=true
    networks:
      - microservice-network
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://configserver:8888/actuator/health" ]
      interval: 10s
      timeout: 5s
      retries: 5

  eurekaserver:
    build:
      context: ./eurekaserver
    container_name: eurekaserver
    ports:
      - "8761:8761"
    depends_on:
      - configserver
    environment:
      - SPRING_PROFILES_ACTIVE=default
    networks:
      - microservice-network
    healthcheck:
      test: [ "CMD", "curl", "--fail", "http://localhost:8761/actuator/health" ]
      interval: 10s
      timeout: 5s
      retries: 5

  user-service:
    build:
      context: ./userService
    container_name: user-service
    ports:
      - "8081:8081"
    depends_on:
      - configserver
      - eurekaserver
      - mongodb
      - kafka
    environment:
      - SPRING_PROFILES_ACTIVE=default
    networks:
      - microservice-network

  order-service:
    build:
      context: ./orderService
    container_name: order-service
    ports:
      - "8082:8082"
    depends_on:
      - configserver
      - eurekaserver
      - mongodb
      - kafka
    environment:
      - SPRING_PROFILES_ACTIVE=default
    networks:
      - microservice-network

  product-service:
    build:
      context: ./productService
    container_name: product-service
    ports:
      - "8083:8083"
    depends_on:
      - configserver
      - postgres
      - kafka
      - eurekaserver
    environment:
      - SPRING_PROFILES_ACTIVE=default
    networks:
      - microservice-network

  notification-service:
    build:
      context: ./notification-service
    container_name: notification-service
    ports:
      - "8084:8084"
    depends_on:
      - mongodb
      - kafka
      - configserver
      - eurekaserver
    environment:
      - SPRING_PROFILES_ACTIVE=default
    networks:
      - microservice-network

  zookeeper:
    image: bitnami/zookeeper:3.9
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    volumes:
      - zookeeper_data:/bitnami/zookeeper
    networks:
      - microservice-network

  kafka:
    image: bitnami/kafka:3.6
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper
    volumes:
      - kafka_data:/bitnami/kafka
    networks:
      - microservice-network

volumes:
  postgres_data:
  kafka_data:
  zookeeper_data:

networks:
  microservice-network:
    driver: bridge